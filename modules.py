#random sample
#list(d.value) типа делает нормальный массив
#in
#not in
#if 'text' startswith ('txt')
#endwith (('a', 'u', 'e'))

#Модули в Питоне:
#    math
#    os, shutil
#    datetime
#    random
#    urllib2
#    xml.dom
#    codecs - работа с кодировками
#    re - регурялные выражения

#!!!import re
#Регулярные выражения помогают искать нужные фрагменты строк.
#. - один любой символ на месте точки
#* - предыдущий символ, повторенные любое количество раз (в т ч и 0)
#+ - символ повторяется любое количество раз, не включая 0
#.* - любое количество символов
#    до.*е+ - поймает фрагмент текста, начинающийся на "до", заканчивающийся на последнюю "е"
#[] - один из символов в скобках, [abc]
#[...-...] - один из символов в диапазоне [a-я]
#    Все русские буквы [a-яёА-ЯЁ]
#    Все числа [0-9]
#\ или \\ - экранирование (отмена свойства символа, становится просто символом, который
#можно, например, искать в текста (\?)
#| - или
#? - предыдущего символа может и не быть
#() - используются для группировки. Может быть ()? - означает,
#что вся группа в скобках может не быть
#   Hadel, haedel, На с двумя точками del(a c двумя точками|ae)del
#    (ha(s|d|v(e|ing)) - все формы to have
#     .*[уеыаояиюёэ].*[уеыаоэяиюё]. - поиск всех как минимум двусложных слов

#m=re.search(выражение, название строки) - возвращает m=true or m=none
#     print(m.group()) - печатает, что нашел

#Поиск всех форм слова пельмень:
#m=re.search('пельмен(ь|и|е[йм]?|ю|я(ми|х)?)', str)

#Является ли задаваемая словоформа словоформой пельменя
#import re
#word=input()
#a='пельмен(ь|и|е[йм]?|ю|я(ми|х)?)'
#m=re.search(a, word)
#if m!=None:
#            print('Ok')
#else:
#            print('Not ok')

#import re

def read_file():
    wordlist=[]
    file = open('C:\\Users\\student\\Desktop\\pupkin.txt', 'r', encoding='UTF-8')
    for line in file:
        linelist=line.split()
        for word in linelist:
            word=word.lower()
            word=word.strip('.')
            wordlist.append(word)
    file.close()
    return wordlist

print(read_file())

#word=input()
#a='пельмен(ь|и|е[йм]?|ю|я(ми|х)?)'
#m=re.search(a, word)
#if m!=None:
#            print('Ok')
#else:
#            print('Not ok')

