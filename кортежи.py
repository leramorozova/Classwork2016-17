#Кортежи во многом работают, как массивы, но:
#    - записываются в круглых скобках
#    - нельзя переприсваивать им значения по типу:
#        а=(1, 2, 3)
#        а[2]=4
#        не получится a=(1, 2, 3)
#        Можно только переприсвоить весь кортеж целиком.
#    - кортеж может быть ключом словаря (как строка или цифра)
#    потому что кортеж hashable, а массив нет
#        + dic[(1, 2, 3)] = 'python'
#        - dic[[1, 2, 3]] = 'python'
#Можно написать функцию, возвращающую кортеж (просто возврат нескольких
#переменных подряд.
#
#re.sub - регулярное выражение для замены, возвращает строку
#re.sub('что заменяем', 'на что заменяем', строка)
#\b - находит границу слова (проверяет, есть ли перед/после слова пробел)
#\s - находит пробелы и пробелообразные символы (включая их в себя
#\bкошки - заменятся кошки, а лукошки нет
#\\w - любой буквенный символ
#^ - отрицание (знаки, которые не читаются) [^кроме символов тут]

#r'' - экзанирование всех символов в строке

#m=re.sub('(\b\\w+\b) \\1', '\\1', str, flags=re.U) - замена повторяющихся символов
#В 3 питоне флаг обычно не используется, но используется
#flags=re.DOTALL - помогает читать текст целиком, а не по строчкам.
#                    Нужно, когда программа должна пересекать границы строк.
#                    Или регурярное выражение охватывает несколько строк.

#Контекстное удаление: АВС - АС

#.{3,5} - символ повторяется от 3х до 5 раз
#.{3,} - символ не меньше 3х раз
#.{,5} - не больше 5 раз

import re

def read_file():
    with open ('C:\\Users\\student\\Desktop\\din.html', 'r', encoding='UTF-8') as file:
        text=file.read()
        file.close()
        return text

def finder(): #находит все формы динозавра
    form=re.findall('[Дд]инозавр[аыуое]?[мв]?', read_file())
    return form

def tag_exterminator():
    clear=re.sub('<.*?>', '', read_file(), flags = re.DOTALL)
    return clear

def subs(): #заменяет динозавров на котов
    text=read_file()
    form=re.sub('[Дд]инозавр', 'кот', text)
    return form

print (subs())
